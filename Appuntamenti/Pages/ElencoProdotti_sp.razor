@using System.IO;
@using Newtonsoft.Json;
@page "/prodotti_sp"


@if (attuale == null)
{
    titolo = "Catalogo";
}
else
{
    if (attuale.Id == 0)
    {
        titolo = "Nuovo prodotto";
    }
    else
    {
        titolo = "Modifica prodotto";
    }
}

<h1>@titolo</h1>
<p>Usa questa pagina per gestire il tuo catalogo prodotti!</p>
@*@if (daModificare == null) { <p>Test</p> }*@

@if (attuale == null)
{ // Lista di tutti i prodotti
    <p><b>@tutti.Count</b> prodotti in catalogo</p>
    <SelectCategoria @bind-idCategoria="categoriaSelezionata" descrizione="Filtra per categoria" />
    <p>Hai selezionato la categoria numero @categoriaSelezionata</p>
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Prodotto</th>
                <th width="1%">Prezzo</th>
                <th width="1%">Modifica</th>
                <th width="1%">Cancella</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Prodotto singolo in tutti)
            {
                if (categoriaSelezionata == 0 || singolo.IdCategoria == categoriaSelezionata)
                {
                    <tr>
                        <td>@singolo.Nome</td>
                        <td>&euro;@singolo.Prezzo</td>
                        <td><span class="oi oi-pencil" style="color: mediumblue" @onclick="(e => OnModifica(singolo))"></span></td>
                        <td><span class="oi oi-trash" style="color: indianred" @onclick="(e => OnCancella(singolo))"></span></td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <span class="oi oi-plus btn btn-primary" @onclick="OnNuovo"></span>
}
else
{
    <EditForm Model="@attuale" OnValidSubmit="@(e => OnSalva(attuale))">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="prodotto">Prodotto</label>
            <InputText id="prodotto" @bind-Value="attuale.Nome" class="form-control" />
        </div>
        <div>
            <label for="IdCategoria">Categoria</label>
            <SelectCategoria @bind-idCategoria="attuale.IdCategoria"></SelectCategoria>
        </div>
        <button class="oi oi-check btn btn-primary"></button>
        <button type="reset" class="oi oi-x btn btn-secondary" @onclick="OnAnnulla"></button>
    </EditForm>
}


@code {

    public List<Prodotto> tutti = Inizializza();

    public Prodotto attuale;

    public string titolo;

    public int categoriaSelezionata;



    // TODO
    public void OnModifica(Prodotto selezionato)
    {
        // per evitare di sovrascrivere l'elemento prima della conferma
        // creiamo un nuovo prodotto
        //tutti.Single(singolo => singolo.Id == selezionato.Id);
        attuale = new Prodotto();

        attuale.Id = selezionato.Id;
        attuale.Nome = selezionato.Nome;
        attuale.Prezzo = selezionato.Prezzo;
        attuale.IdCategoria = selezionato.IdCategoria;

    }


    public void OnCancella(Prodotto selezionato)
    {
        Prodotto daCancellare = tutti.Single(singolo => singolo.Id == selezionato.Id);
        tutti.Remove(daCancellare);
        Salva();
    }


    public void OnNuovo()
    {
        attuale = new Prodotto();
        attuale.IdCategoria = categoriaSelezionata;
    }


    public void OnAnnulla()
    {
        attuale = null;
    }


    public void OnSalva(Prodotto editato)
    {
        if (editato.Id == 0)
        {
            if (tutti.Count > 0)
            {
                editato.Id = tutti.Max(singolo => singolo.Id) + 1;
            }
            else
            {
                editato.Id = 1;
            }
            tutti.Add(editato);
        }
        else
        {
            Prodotto inlista = tutti.Single(vecchio => vecchio.Id == editato.Id);
            inlista.Nome = editato.Nome;
            inlista.IdCategoria = editato.IdCategoria;
        }
        Salva();
    }


    static public List<Prodotto> Inizializza()
    {
        if (File.Exists("prodotti.json"))
        {
            string buffer = File.ReadAllText("prodotti.json");

            return JsonConvert.DeserializeObject<List<Prodotto>>(buffer);
        }

        return new List<Prodotto>();
    }


    public void Salva()
    {
        string trasformato = JsonConvert.SerializeObject(tutti);
        File.WriteAllText("prodotti.json", trasformato);
        attuale = null;
    }
}
